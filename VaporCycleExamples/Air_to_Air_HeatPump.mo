within VaporCycleExamples;
model Air_to_Air_HeatPump "Template for a residential Heat Pump system with air as a secondary fluid"
    extends .VaporCycle.Experiments.HeatPumpSystem.HeatPumpCircuitBase(evaporator(D_air = 8e-4,channelDensity = fill(120,evaporator.n),n_channels = fill(160,evaporator.n),L = fill(1.8 / ((((evaporator.n)))),evaporator.n),Dhyd = fill(8e-4,evaporator.n),redeclare replaceable model Friction = .VaporCycle.Pipes.SubComponents.FlowResistance.TwoPhase.DensityProfileFriction(p0_in = 600000,p0_out = 580000,h0_in = 567247,h0_out = 235056,mflow0 = 0.0195),redeclare replaceable model HeatTransfer = .VaporCycle.Pipes.SubComponents.HeatTransfer.TwoPhase.ConstantCoefficient,CF_HeatTransfer = 1,redeclare replaceable model Friction_air = .VaporCycle.Pipes.SubComponents.FlowResistance.SinglePhase.QuadraticOperatingPointLoss,redeclare replaceable model HeatTransfer_air = .VaporCycle.Pipes.SubComponents.HeatTransfer.SinglePhase.ConstantCoefficient,redeclare replaceable package WorkingFluid = .VaporCycle.Media.Hydrofluorocarbons.R32Short,init_wf(h_in = init.h_cond_out,h_out = init.h_suction),A = fill(.Modelica.Constants.pi / ((4)) * evaporator.Dhyd * evaporator.Dhyd,evaporator.n),wt_start = 0.1,n = 3),condenser(channelDensity = fill(120,condenser.n),n = 3,Dhyd = fill(8e-4,condenser.n),A = fill(.Modelica.Constants.pi / (((4))) * condenser.Dhyd * condenser.Dhyd,condenser.n),redeclare replaceable package WorkingFluid = .VaporCycle.Media.Hydrofluorocarbons.R32Short,redeclare replaceable model Friction = .VaporCycle.Pipes.SubComponents.FlowResistance.TwoPhase.TwoPhaseFriedel,redeclare replaceable model HeatTransfer_air = .VaporCycle.Pipes.SubComponents.HeatTransfer.SinglePhase.ConstantCoefficient(alpha = 300),redeclare replaceable model HeatTransfer = .VaporCycle.Pipes.SubComponents.HeatTransfer.TwoPhase.CondensationShah,init_wf(h_out = init.h_cond_out),D_air = 8e-4,wt_start = 0.1,L_air = 1,redeclare replaceable model Friction_air = .VaporCycle.Pipes.SubComponents.FlowResistance.SinglePhase.LinearOperatingPointLoss(m_flow0 = 0.69),n_channels = fill(850,condenser.n),L = fill(0.6 / ((((condenser.n)))),condenser.n)),compressor(Eff_mechanical = 0.7,Eff_isentropic = 0.8,Eff_volumetric = 0.9,V_MaxDisplacement = 4.645e-5,redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short,initFromEnthalpy = true),multiDisplaySensor1(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),multiDisplaySensor2(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),pipe1(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short,L = 7,D = 0.0022),pipe2(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short,L = 7,D = 0.0022),receiver(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short,H = 0.1,initFromEnthalpy = false,T_start = 273,initOpt = .Modelon.ThermoFluid.Choices.InitOptions.steadyState),pipe4(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),pipe3(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),multiDisplaySensor(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),SimpleTXV(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short,yMax = 0.8,yInit = 0.1 * SimpleTXV.yMax,SuperHeatSetPoint = init.T_sh,dp_start = 2000000),superHeatSensor(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short),redeclare replaceable .VaporCycle.Utilities.Visualizers.pH_Diagrams.PH_R32 pH_diagram(y = ({condenser.summary.p_in,condenser.summary.p_out,evaporator.summary.p_in,evaporator.summary.p_out,condenser.summary.p_in})),init(T_sh = 5,p_high = 2200000,dp_high = 10000,p_suction = 800000,compSpeed = 30,mflow_start = 0.030,T_cond_sec = 280,T_evap_sec = 302,phi_cond_sec = 0.4,phi_evap_sec = 0.4,mflow_cond_sec = 0.69,mflow_evap_sec = 0.69,charge_init = 320,initType = 1,redeclare replaceable package WorkingFluid = .VaporCycle.Media.Hydrofluorocarbons.R32Short),redeclare replaceable package WorkingFluid = .VaporCycle.Media.Hydrofluorocarbons.R32Short,subCoolingSensor(redeclare replaceable package Medium = .VaporCycle.Media.Hydrofluorocarbons.R32Short));
    extends .Modelon.Icons.Experiment;
    replaceable .Modelica.Blocks.Sources.Ramp mflow_cond_in(duration = 2,offset = init.mflow_cond_sec,height = 0.3,startTime = 5000) annotation(Placement(transformation(extent = {{-155,85},{-145,95}})));
    replaceable .Modelica.Blocks.Sources.Ramp T_cond_in(offset = init.T_cond_sec,duration = 5,startTime = 5000,height = -10) annotation(Placement(transformation(extent = {{-155.5,104.5},{-144.5,115.5}},rotation = 0.0,origin = {0.0,0.0})));
    .VaporCycle.Sources.AirFlowSource airIn_cond(use_T_in = true,flowDefinition = .Modelon.ThermoFluid.Choices.FlowDefinition.m_flow,use_flow_in = true,use_phi_in = true,redeclare package Medium = AirMedium,p_start = init.p_cond_in) annotation(Placement(transformation(extent = {{-132.0,62.0},{-112.0,82.0}},rotation = 0.0,origin = {0.0,0.0})));
    .VaporCycle.Sources.AirPressureSource airOut_cond(redeclare package Medium = AirMedium,use_p_in = true,use_T_in = true,use_phi_in = true,N = 1,p = 101300,m_flow_start = fill(init.mflow_cond_sec,airOut_cond.pressureBoundary.N)) annotation(Placement(transformation(extent = {{10,-10},{-10,10}},rotation = 0,origin = {-40,70})));
    replaceable .Modelica.Blocks.Sources.Ramp speed(height = 0,startTime = 1e6,duration = 0,offset = init.compSpeed) annotation(Placement(transformation(extent = {{96,-6},{84,6}})));
    .VaporCycle.Sources.AirFlowSource airIn_evap(use_T_in = true,use_flow_in = true,flowDefinition = .Modelon.ThermoFluid.Choices.FlowDefinition.m_flow,temperatureUnit = .Modelon.ThermoFluid.Choices.RealTemperatureUnit.K,use_phi_in = true,redeclare package Medium = AirMedium,p_start = init.p_evap_in) annotation(Placement(transformation(extent = {{-30,-70},{-50,-50}})));
    replaceable .Modelica.Blocks.Sources.Ramp T_evap_in(offset = init.T_evap_sec,duration = 5,startTime = 5000,height = 5) annotation(Placement(transformation(extent = {{-2.0,-36.0},{-14.0,-24.0}},rotation = 0.0,origin = {0.0,0.0})));
    replaceable .Modelica.Blocks.Sources.Ramp mflow_evap_in(duration = 1,startTime = 5000,height = 0,offset = init.mflow_evap_sec) annotation(Placement(transformation(extent = {{-6.0,-56.0},{-18.0,-44.0}},rotation = 0.0,origin = {0.0,0.0})));
    .VaporCycle.Sources.AirPressureSource airOut_evap(redeclare package Medium = AirMedium,use_p_in = true,use_T_in = true,use_phi_in = true,N = 1,p = 101300,m_flow_start = fill(init.mflow_evap_sec,airOut_evap.pressureBoundary.N)) annotation(Placement(transformation(extent = {{-10,-10},{10,10}},rotation = 0,origin = {-120,-60})));
    replaceable .Modelica.Blocks.Sources.Constant phi_cond_in(k = init.phi_cond_sec) annotation(Placement(transformation(extent = {{-155,125},{-145,135}})));
    replaceable .Modelica.Blocks.Sources.Constant phi_cond_out(k = 0.5) annotation(Placement(transformation(extent = {{-5,125},{-15,135}})));
    replaceable .Modelica.Blocks.Sources.Constant T_cond_out(k = 273.15 + 25) annotation(Placement(transformation(extent = {{5.5,-5.5},{-5.5,5.5}},rotation = 0,origin = {-10,110})));
    replaceable .Modelica.Blocks.Sources.Constant p_cond_out(k = 1.013e5) annotation(Placement(transformation(extent = {{-5,85},{-15,95}})));
    replaceable .Modelica.Blocks.Sources.Constant phi_evap_in(k = init.phi_evap_sec) annotation(Placement(transformation(extent = {{-4,-16},{-16,-4}})));
    replaceable .Modelica.Blocks.Sources.Constant phi_evap_out(k = 0.5) annotation(Placement(transformation(extent = {{-156,-16},{-144,-4}})));
    replaceable .Modelica.Blocks.Sources.Ramp T_evap_out(offset = 273.15 + 25,duration = 5,startTime = 5000,height = 0) annotation(Placement(transformation(extent = {{-156,-36},{-144,-24}})));
    replaceable .Modelica.Blocks.Sources.Ramp p_evap_out(duration = 1,startTime = 0,height = 0,offset = 1.013e5) annotation(Placement(transformation(extent = {{-156,-56},{-144,-44}})));
    replaceable .Modelica.Blocks.Sources.Ramp speed2(offset = 1,duration = 0,startTime = 1e6,height = 0) annotation(Placement(transformation(extent = {{98.0,-46.0},{86.0,-34.0}},rotation = 0.0,origin = {0.0,0.0})));
equation
    connect(mflow_cond_in.y,airIn_cond.m_flow_in) annotation(Line(points = {{-144.5,90},{-127,90},{-127,77}},color = {0,0,127},smooth = Smooth.None));
    connect(T_cond_in.y,airIn_cond.T_in) annotation(Line(points = {{-143.95,110},{-122,110},{-122,79}},color = {0,0,127},smooth = Smooth.None));
    connect(phi_cond_in.y,airIn_cond.phi_in) annotation(Line(points = {{-144.5,130},{-117.4,130},{-117.4,77}},color = {0,0,127}));
    connect(airOut_cond.phi_in,phi_cond_out.y) annotation(Line(points = {{-44.9,75.1},{-44.9,130},{-15.5,130}},color = {0,0,127}));
    connect(airOut_cond.T_in,T_cond_out.y) annotation(Line(points = {{-40,77},{-40,110},{-16.05,110}},color = {0,0,127}));
    connect(rps.inPort,speed.y) annotation(Line(points = {{56,-10},{78,-10},{78,0},{83.4,0}},color = {0,0,127}));
    connect(airIn_evap.m_flow_in,mflow_evap_in.y) annotation(Line(points = {{-35,-55},{-35,-50},{-18.6,-50}},color = {0,0,127}));
    connect(phi_evap_in.y,airIn_evap.phi_in) annotation(Line(points = {{-16.6,-10},{-44.6,-10},{-44.6,-55}},color = {0,0,127}));
    connect(T_evap_in.y,airIn_evap.T_in) annotation(Line(points = {{-14.6,-30},{-40,-30},{-40,-53}},color = {0,0,127}));
    connect(airOut_evap.phi_in,phi_evap_out.y) annotation(Line(points = {{-115.1,-54.9},{-116,-54.9},{-116,-10},{-143.4,-10}},color = {0,0,127}));
    connect(p_evap_out.y,airOut_evap.p_in) annotation(Line(points = {{-143.4,-50},{-125,-50},{-125,-55}},color = {0,0,127}));
    connect(airOut_evap.T_in,T_evap_out.y) annotation(Line(points = {{-120,-53},{-120,-30},{-143.4,-30}},color = {0,0,127}));
    connect(airOut_cond.p_in,p_cond_out.y) annotation(Line(points = {{-35,75},{-35,90},{-15.5,90}},color = {0,0,127}));
    connect(condenser.portB_sec,airOut_cond.port[1]) annotation(Line(points = {{-72.8485141123407,66},{-60.42425705617035,66},{-60.42425705617035,70},{-48,70}},color = {85,170,255}));
    connect(condenser.portA_sec,airIn_cond.port) annotation(Line(points = {{-91.1514858876593,66},{-102.57574294382965,66},{-102.57574294382965,72},{-114,72}},color = {85,170,255}));
    connect(airIn_evap.port,evaporator.portA_sec) annotation(Line(points = {{-48,-60},{-60,-60},{-60,-98},{-72,-98}},color = {85,170,255}));
    connect(airOut_evap.port[1],evaporator.portB_sec) annotation(Line(points = {{-112,-60},{-102,-60},{-102,-98},{-92,-98}},color = {85,170,255}));
    connect(speed2.y,compressor.relativeDisplacement) annotation(Line(points = {{85.4,-40},{27.65742083903661,-40},{27.65742083903661,-20.064672119057363}},color = {0,0,127}));
    annotation(Icon(coordinateSystem(preserveAspectRatio = false,extent = {{-100,-100},{100,100}})),Documentation(info = "<html><p>
This is a template for a residential Heat Pump system experiment with R-32 as refrigerant by default (User can also change the refrigerant). The system follows a vapor compression cycle with air as secondary fluid in condenser and evaporator. The superheating at the evaporator is regulated by a thermostatic expansion valve. The system is initialized with a given specific charge. The Air side and compressor conditions can be given as a boundary conditions. This template can be used for specific purpose like standalone heat pump systems. This model is extended from&nbsp;<a href=\"modelica://VaporCycle.Experiments.HeatPumpSystem.HeatPumpCircuitBase\">HeatPumpCircuitBase</a></p></html>",revisions = "<html>
Copyright &copy; 2004-2023, MODELON AB <br /> The use of this software component is regulated by the licensing conditions for Modelon Libraries. <br />This copyright notice must, unaltered, accompany all components that are derived from, copied from, <br />or by other means have their origin from any Modelon Library.
</html>"));
end Air_to_Air_HeatPump;
